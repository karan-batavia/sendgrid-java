/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Scopes API
 * The Twilio SendGrid Scopes API allows you to retrieve the scopes or permissions available to a user, see the user's attempts to access your SendGrid account, and, if necessary, deny an access request.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.scopes;

import com.sendgrid.exception.ApiConnectionException;
import com.sendgrid.exception.ApiErrorResponse;
import com.sendgrid.http.HttpMethod;
import com.sendgrid.http.Request;
import com.sendgrid.http.Response;
import com.sendgrid.http.TokenRestClient;
import com.sendgrid.rest.api.v3.scopes.models.DeleteScopesRequestsRequestId404Response;
import com.sendgrid.rest.api.v3.scopes.models.PatchScopesRequestsApproveId200Response;
import com.sendgrid.util.JsonUtil;
import com.sendgrid.util.Matcher;
import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
public class PatchScopeRequestApprove {
    private final String requestId;


    public PatchScopesRequestsApproveId200Response send(final TokenRestClient client) {
        String path = "/v3/scopes/requests/{request_id}/approve";
        Request.Builder builder = new Request.Builder(HttpMethod.PATCH, path)
                .addPathParam("request_id", requestId.toString());
        Request request = builder.build();
        Response response = client.request(request);

        if (response == null) {
            throw new ApiConnectionException(
                    "PatchScopeRequestApprove creation failed: Unable to connect to server"
            );
        } else if (!TokenRestClient.SUCCESS.test(response.getStatusCode())) {

            int statusCode = response.getStatusCode();
            if (Matcher.matches(Integer.toString(statusCode), "401")) {
                Object error = JsonUtil.fromJson(
                        response.getStream(),
                        Object.class
                );
                throw new ApiErrorResponse(statusCode, null, error, response.getHeaders());
            }

            if (Matcher.matches(Integer.toString(statusCode), "404")) {
                DeleteScopesRequestsRequestId404Response error = JsonUtil.fromJson(
                        response.getStream(),
                        DeleteScopesRequestsRequestId404Response.class
                );
                throw new ApiErrorResponse(statusCode, null, error, response.getHeaders());
            }

        }
        return JsonUtil.fromJson(response.getStream(), PatchScopesRequestsApproveId200Response.class);
    }


}
