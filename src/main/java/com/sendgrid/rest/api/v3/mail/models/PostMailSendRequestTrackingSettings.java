/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Mail API
 * The Twilio SendGrid v3 Mail API allows you to send email at scale over HTTP. The Mail Send endpoint supports many levels of functionality, allowing you to send templates, set categories and custom arguments that can be used to analyze your send, and configure which tracking settings to include such as opens and clicks. You can also group mail sends into batches, allowing you to schedule and cancel sends by their batch IDs.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sendgrid.rest.api.v3.mail.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

import java.util.StringJoiner;


@ToString
public class PostMailSendRequestTrackingSettings {
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("clickTracking")
    @Getter
    @Setter
    private PostMailSendRequestTrackingSettingsClickTracking clickTracking;
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("openTracking")
    @Getter
    @Setter
    private PostMailSendRequestTrackingSettingsOpenTracking openTracking;
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("subscriptionTracking")
    @Getter
    @Setter
    private PostMailSendRequestTrackingSettingsSubscriptionTracking subscriptionTracking;
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("ganalytics")
    @Getter
    @Setter
    private PostMailSendRequestTrackingSettingsGanalytics ganalytics;

    public PostMailSendRequestTrackingSettings() {
    }

    private PostMailSendRequestTrackingSettings(Builder builder) {
        this.clickTracking = builder.clickTracking;
        this.openTracking = builder.openTracking;
        this.subscriptionTracking = builder.subscriptionTracking;
        this.ganalytics = builder.ganalytics;
    }

    // Builder class for constructing object
    public static class Builder {
        private PostMailSendRequestTrackingSettingsClickTracking clickTracking;
        private PostMailSendRequestTrackingSettingsOpenTracking openTracking;
        private PostMailSendRequestTrackingSettingsSubscriptionTracking subscriptionTracking;
        private PostMailSendRequestTrackingSettingsGanalytics ganalytics;

        public Builder() {
        }

        public Builder clickTracking(PostMailSendRequestTrackingSettingsClickTracking clickTracking) {
            this.clickTracking = clickTracking;
            return this;
        }

        public Builder openTracking(PostMailSendRequestTrackingSettingsOpenTracking openTracking) {
            this.openTracking = openTracking;
            return this;
        }

        public Builder subscriptionTracking(PostMailSendRequestTrackingSettingsSubscriptionTracking subscriptionTracking) {
            this.subscriptionTracking = subscriptionTracking;
            return this;
        }

        public Builder ganalytics(PostMailSendRequestTrackingSettingsGanalytics ganalytics) {
            this.ganalytics = ganalytics;
            return this;
        }

        public PostMailSendRequestTrackingSettings build() {
            return new PostMailSendRequestTrackingSettings(this);
        }

    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(", ", PostMailSendRequestTrackingSettings.class.getSimpleName() + "(", ")");
        if (clickTracking != null) joiner.add("clickTracking=" + clickTracking);
        if (openTracking != null) joiner.add("openTracking=" + openTracking);
        if (subscriptionTracking != null) joiner.add("subscriptionTracking=" + subscriptionTracking);
        if (ganalytics != null) joiner.add("ganalytics=" + ganalytics);
        return joiner.toString();
    }

}
         
    
