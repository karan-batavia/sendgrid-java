/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Marketing Campaigns Lists API
 * The Twilio SendGrid Marketing Campaigns Lists API allows you to manage your contacts lists programmatically. Lists are static collections of Marketing Campaigns contacts. You can use this API to interact with the list objects themselves. To add contacts to a list, you must use the [Contacts API](https://docs.sendgrid.com/api-reference/contacts/).  You can also manage your lists using the Contacts menu in the [Marketing Campaigns application user interface](https://mc.sendgrid.com/contacts). For more information about lists and best practices for building them, see [**Building your Contact Lists**](https://sendgrid.com/docs/ui/managing-contacts/building-your-contact-list/).
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sendgrid.rest.api.v3.mclists.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

import java.util.StringJoiner;


@ToString
public class GetMarketingListsId200Response {
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("id")
    @Getter
    @Setter
    private Object id;
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("name")
    @Getter
    @Setter
    private Object name;
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("contactCount")
    @Getter
    @Setter
    private Object contactCount;
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("metadata")
    @Getter
    @Setter
    private SelfMetadata metadata;
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("contactSample")
    @Getter
    @Setter
    private ContactDetails contactSample;

    public GetMarketingListsId200Response() {
    }

    private GetMarketingListsId200Response(Builder builder) {
        this.id = builder.id;
        this.name = builder.name;
        this.contactCount = builder.contactCount;
        this.metadata = builder.metadata;
        this.contactSample = builder.contactSample;
    }

    // Builder class for constructing object
    public static class Builder {
        private Object id;
        private Object name;
        private Object contactCount;
        private SelfMetadata metadata;
        private ContactDetails contactSample;

        public Builder() {
        }

        public Builder id(Object id) {
            this.id = id;
            return this;
        }

        public Builder name(Object name) {
            this.name = name;
            return this;
        }

        public Builder contactCount(Object contactCount) {
            this.contactCount = contactCount;
            return this;
        }

        public Builder metadata(SelfMetadata metadata) {
            this.metadata = metadata;
            return this;
        }

        public Builder contactSample(ContactDetails contactSample) {
            this.contactSample = contactSample;
            return this;
        }

        public GetMarketingListsId200Response build() {
            return new GetMarketingListsId200Response(this);
        }

    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(", ", GetMarketingListsId200Response.class.getSimpleName() + "(", ")");
        if (id != null) joiner.add("id=" + id);
        if (name != null) joiner.add("name=" + name);
        if (contactCount != null) joiner.add("contactCount=" + contactCount);
        if (metadata != null) joiner.add("metadata=" + metadata);
        if (contactSample != null) joiner.add("contactSample=" + contactSample);
        return joiner.toString();
    }

}
         
    
