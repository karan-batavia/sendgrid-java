/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Recipients' Data Erasure API
 * The Recipients' Data Erasure API allows Twilio SendGrid customers to delete their own customers' personal data from the Twilio SendGrid Platform. The use of this API facilitates the self-service removal of email personal data from the Twilio SendGrid platform and will enable customers to comply with various obligatory data privacy regulations.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.recipientsdataerasure;

import com.sendgrid.exception.ApiConnectionException;
import com.sendgrid.http.HttpMethod;
import com.sendgrid.http.Request;
import com.sendgrid.http.Response;
import com.sendgrid.http.TokenRestClient;
import com.sendgrid.rest.api.v3.recipientsdataerasure.models.RecipientsDataErasureEraseRecipientsRequest;
import com.sendgrid.rest.api.v3.recipientsdataerasure.models.RecipientsDataErasureJobId;
import com.sendgrid.util.JsonUtil;
import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
public class PostErasejob {
    private String onBehalfOf;
    private final RecipientsDataErasureEraseRecipientsRequest recipientsDataErasureEraseRecipientsRequest;


    public RecipientsDataErasureJobId send(final TokenRestClient client) {
        String path = "/v3/recipients/erasejob";
        Request.Builder builder = new Request.Builder(HttpMethod.POST, path);
        addHeaderParams(builder);
        body(builder);
        Request request = builder.build();
        Response response = client.request(request);

        if (response == null) {
            throw new ApiConnectionException(
                    "PostErasejob creation failed: Unable to connect to server"
            );
        } else if (!TokenRestClient.SUCCESS.test(response.getStatusCode())) {

            int statusCode = response.getStatusCode();
        }
        return JsonUtil.fromJson(response.getStream(), RecipientsDataErasureJobId.class);
    }


    private void addHeaderParams(Request.Builder builder) {
        if (onBehalfOf != null) {
            builder.addHeaderParams("on-behalf-of", onBehalfOf.toString());
        }

    }


    private void body(final Request.Builder builder) {
        if (recipientsDataErasureEraseRecipientsRequest != null) {
            builder.body(JsonUtil.toJson(recipientsDataErasureEraseRecipientsRequest));
        }
    }

}
