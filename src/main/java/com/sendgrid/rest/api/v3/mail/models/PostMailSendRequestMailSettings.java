/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Mail API
 * The Twilio SendGrid v3 Mail API allows you to send email at scale over HTTP. The Mail Send endpoint supports many levels of functionality, allowing you to send templates, set categories and custom arguments that can be used to analyze your send, and configure which tracking settings to include such as opens and clicks. You can also group mail sends into batches, allowing you to schedule and cancel sends by their batch IDs.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sendgrid.rest.api.v3.mail.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

import java.util.StringJoiner;


@ToString
public class PostMailSendRequestMailSettings {
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("bypassListManagement")
    @Getter
    @Setter
    private PostMailSendRequestMailSettingsBypassListManagement bypassListManagement;
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("bypassSpamManagement")
    @Getter
    @Setter
    private PostMailSendRequestMailSettingsBypassSpamManagement bypassSpamManagement;
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("bypassBounceManagement")
    @Getter
    @Setter
    private PostMailSendRequestMailSettingsBypassBounceManagement bypassBounceManagement;
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("bypassUnsubscribeManagement")
    @Getter
    @Setter
    private PostMailSendRequestMailSettingsBypassUnsubscribeManagement bypassUnsubscribeManagement;
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("footer")
    @Getter
    @Setter
    private PostMailSendRequestMailSettingsFooter footer;
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("sandboxMode")
    @Getter
    @Setter
    private PostMailSendRequestMailSettingsSandboxMode sandboxMode;

    public PostMailSendRequestMailSettings() {
    }

    private PostMailSendRequestMailSettings(Builder builder) {
        this.bypassListManagement = builder.bypassListManagement;
        this.bypassSpamManagement = builder.bypassSpamManagement;
        this.bypassBounceManagement = builder.bypassBounceManagement;
        this.bypassUnsubscribeManagement = builder.bypassUnsubscribeManagement;
        this.footer = builder.footer;
        this.sandboxMode = builder.sandboxMode;
    }

    // Builder class for constructing object
    public static class Builder {
        private PostMailSendRequestMailSettingsBypassListManagement bypassListManagement;
        private PostMailSendRequestMailSettingsBypassSpamManagement bypassSpamManagement;
        private PostMailSendRequestMailSettingsBypassBounceManagement bypassBounceManagement;
        private PostMailSendRequestMailSettingsBypassUnsubscribeManagement bypassUnsubscribeManagement;
        private PostMailSendRequestMailSettingsFooter footer;
        private PostMailSendRequestMailSettingsSandboxMode sandboxMode;

        public Builder() {
        }

        public Builder bypassListManagement(PostMailSendRequestMailSettingsBypassListManagement bypassListManagement) {
            this.bypassListManagement = bypassListManagement;
            return this;
        }

        public Builder bypassSpamManagement(PostMailSendRequestMailSettingsBypassSpamManagement bypassSpamManagement) {
            this.bypassSpamManagement = bypassSpamManagement;
            return this;
        }

        public Builder bypassBounceManagement(PostMailSendRequestMailSettingsBypassBounceManagement bypassBounceManagement) {
            this.bypassBounceManagement = bypassBounceManagement;
            return this;
        }

        public Builder bypassUnsubscribeManagement(PostMailSendRequestMailSettingsBypassUnsubscribeManagement bypassUnsubscribeManagement) {
            this.bypassUnsubscribeManagement = bypassUnsubscribeManagement;
            return this;
        }

        public Builder footer(PostMailSendRequestMailSettingsFooter footer) {
            this.footer = footer;
            return this;
        }

        public Builder sandboxMode(PostMailSendRequestMailSettingsSandboxMode sandboxMode) {
            this.sandboxMode = sandboxMode;
            return this;
        }

        public PostMailSendRequestMailSettings build() {
            return new PostMailSendRequestMailSettings(this);
        }

    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(", ", PostMailSendRequestMailSettings.class.getSimpleName() + "(", ")");
        if (bypassListManagement != null) joiner.add("bypassListManagement=" + bypassListManagement);
        if (bypassSpamManagement != null) joiner.add("bypassSpamManagement=" + bypassSpamManagement);
        if (bypassBounceManagement != null) joiner.add("bypassBounceManagement=" + bypassBounceManagement);
        if (bypassUnsubscribeManagement != null)
            joiner.add("bypassUnsubscribeManagement=" + bypassUnsubscribeManagement);
        if (footer != null) joiner.add("footer=" + footer);
        if (sandboxMode != null) joiner.add("sandboxMode=" + sandboxMode);
        return joiner.toString();
    }

}
         
    
